@page "/songdetails/{songId:guid}"
@inject HttpClient Http
@using music_manager_starter.Shared

@code {
    [Parameter] public Guid songId { get; set; }
    private Song song;
    private byte[]? uploadedFileContent;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine($"Loading details for song ID: {songId}");
            song = await Http.GetFromJsonAsync<Song>($"api/songs/{songId}");
            
            if (song == null)
            {
                Console.WriteLine("No song found with the provided ID.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading song details: {ex.Message}");
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            // Read the file into a byte array
            uploadedFileContent = new byte[file.Size];
            using var stream = file.OpenReadStream();
            await stream.ReadAsync(uploadedFileContent, 0, (int)file.Size);
        }
    }

    private async Task SaveAlbumCover()
    {
        if (uploadedFileContent != null)
        {
            var response = await Http.PostAsJsonAsync($"api/songs/{song.Id}/cover", uploadedFileContent);
            if (response.IsSuccessStatusCode)
            {
                // Reload song to display the new cover
                song = await Http.GetFromJsonAsync<Song>($"api/songs/{song.Id}");
                uploadedFileContent = null;
            }
            else
            {
                Console.WriteLine("Failed to upload cover image.");
            }
        }
    }
}

<div class="p-6">
    @if (song != null)
    {
        <h2 class="text-3xl font-bold text-white mb-8">@song.Title</h2>
        <p class="text-white"><strong>Artist:</strong> @song.Artist</p>
        <p class="text-white"><strong>Album:</strong> @song.Album</p>
        <p class="text-white"><strong>Genre:</strong> @song.Genre</p>
        <p class="text-white"><strong>Release Date:</strong> @song.Release</p>

        @if (song.Cover != null && song.Cover.Length > 0)
        {
            <!-- Display the album cover if it exists -->
            <img src="data:image/png;base64,@Convert.ToBase64String(song.Cover)" alt="Album Cover" class="w-full max-w-xs mt-4 rounded shadow-lg" />
        }
        else
        {
            <p class="text-gray-400 mt-4">No album cover available.</p>
            
            <!-- File input to upload an album cover -->
            <InputFile OnChange="HandleFileSelected" class="mt-2 text-gray-200" />
            
            @if (uploadedFileContent != null)
            {
                <button @onclick="SaveAlbumCover" class="mt-2 bg-purple-600 text-white px-4 py-2 rounded">Save Album Cover</button>
            }
        }
    }
    else
    {
        <p class="text-gray-400">Loading song details...</p>
    }
</div>
